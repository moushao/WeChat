package com.tw.wechat.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.tw.wechat.entity.Comment;
import com.tw.wechat.entity.Photo;
import com.tw.wechat.entity.Tweet;
import com.tw.wechat.entity.User;

import com.tw.wechat.dao.CommentDao;
import com.tw.wechat.dao.PhotoDao;
import com.tw.wechat.dao.TweetDao;
import com.tw.wechat.dao.UserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig commentDaoConfig;
    private final DaoConfig photoDaoConfig;
    private final DaoConfig tweetDaoConfig;
    private final DaoConfig userDaoConfig;

    private final CommentDao commentDao;
    private final PhotoDao photoDao;
    private final TweetDao tweetDao;
    private final UserDao userDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        commentDaoConfig = daoConfigMap.get(CommentDao.class).clone();
        commentDaoConfig.initIdentityScope(type);

        photoDaoConfig = daoConfigMap.get(PhotoDao.class).clone();
        photoDaoConfig.initIdentityScope(type);

        tweetDaoConfig = daoConfigMap.get(TweetDao.class).clone();
        tweetDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        commentDao = new CommentDao(commentDaoConfig, this);
        photoDao = new PhotoDao(photoDaoConfig, this);
        tweetDao = new TweetDao(tweetDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(Comment.class, commentDao);
        registerDao(Photo.class, photoDao);
        registerDao(Tweet.class, tweetDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        commentDaoConfig.clearIdentityScope();
        photoDaoConfig.clearIdentityScope();
        tweetDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
    }

    public CommentDao getCommentDao() {
        return commentDao;
    }

    public PhotoDao getPhotoDao() {
        return photoDao;
    }

    public TweetDao getTweetDao() {
        return tweetDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
